# Generic metadata about this project
name: prefect-monorepo
prefect-version: 2.14.3

# build section allows you to manage and build docker images
build:

# push section allows you to manage if and how this project is uploaded to remote locations
push:

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
  - prefect.deployments.steps.git_clone: &clone_repo
      repository: https://github.com/zzstoatzz/prefect-monorepo
      branch: main

# File for configuring project / deployment build, push and pull steps
definitions:
  work_pools:
    k8s_work_pool: &k8s_work_pool
      name: k8s
      work_queue_name: default
      job_variables:
        image: "{{ build_image.image }}"
    local_work_pool: &local_work_pool
      name: local

  schedules:
    every_ten_minutes: &every_10_minutes
      interval: 600
    minutely: &minutely
      rrule: FREQ=MINUTELY
  actions:
    docker_build: &docker_build
      - prefect_docker.deployments.steps.build_docker_image:
          id: build-image
          requires: prefect-docker>=0.3.11
          image_name: zzstoatzz/prefect-monorepo
          tag: latest
          dockerfile: Dockerfile.demo
          buildargs:
            TOKEN: "{{ $TOKEN }}"

    cached_docker_build: &cached_docker_build
      - demo_project.steps.docker.cached_build_docker_image:
          id: build-image
          requires: prefect-docker>=0.3.11
          image_name: zzstoatzz/prefect-monorepo
          tag: latest
          dockerfile: Dockerfile.demo
          cache_key: "foo"
    docker_push: &docker_push
      - prefect_docker.deployments.steps.push_docker_image:
          id: push-image
          requires: prefect-docker>=0.3.11
          image_name: zzstoatzz/prefect-monorepo
          tag: latest

deployments:
  - name: healthcheck-demo
    entrypoint: src/demo_project/healthcheck.py:healthcheck
    schedule: *minutely
    parameters:
      message: Don't panic!
    work_pool: *local_work_pool
    pull:
      - prefect.deployments.steps.git_clone:
          <<: *clone_repo
      - prefect.deployments.steps.run_shell_script:
          script: echo "Hello from the healthcheck-demo project!"

  - name: healthcheck-docker-test
    entrypoint: src/demo_project/healthcheck.py:healthcheck
    schedule: *every_10_minutes
    work_pool: *k8s_work_pool
    build: *docker_build
    # push: *docker_push

  - name: healthcheck-storage-test
    entrypoint: src/demo_project/healthcheck.py:healthcheck
    work_pool:
      name: k8s
    version:
    tags: []
    description:
    parameters: {}

  - name: target-clone-dir
    entrypoint: src/demo_project/test.py:random_flow
    work_pool:
      name: local
      job_variables:
        working_dir: /Users/nate/src/demos/prefect-monorepo/test
    schedule: null
    pull:
      - prefect.deployments.steps.git_clone:
          repository: https://github.com/zzstoatzz/prefect-monorepo
      - prefect.deployments.steps.run_shell_script:
          script: pwd

  - name: clone-then-install
    entrypoint: src/demo_project/test.py:random_flow
    work_pool:
      name: docker-work
    schedule: null
    pull:
      - prefect.deployments.steps.git_clone:
          id: clone-repo
          repository: https://github.com/zzstoatzz/prefect-monorepo
      - prefect.deployments.steps.pip_install_requirements:
          directory: "{{ clone-repo.directory }}"
          requirements_file: requirements.txt

  - name: set-working-directory
    entrypoint: src/demo_project/no_deps.py:independent_flow
    work_pool:
      name: k8s
      job_variables:
        image: zzstoatzz/prefect-monorepo:foo
    schedule: null
    pull:
      - prefect.deployments.steps.set_working_directory:
          directory: /opt/prefect/

  - name: accepts-plumbus
    entrypoint: src/demo_project/accepts_model.py:use_plumbus
    work_pool:
      name: k8s
    parameters:
      plumbus:
        size: 3
        color: blue

  - name: demo-deployment
    entrypoint: src/demo_project/demo_flow.py:some_work
    work_pool:
      name: local
      job_variables:
        env:
          EXECUTION_ENVIRONMENT: "{{ $EXECUTION_ENVIRONMENT }}"
          MY_NOT_SO_SECRET_CONFIG: "{{ $MY_NOT_SO_SECRET_CONFIG }}"
    schedule: null

  - name: write-welcome-email
    entrypoint: src/demo_project/write_email_to_user.py:compose_email
    work_pool:
      name: local
    triggers:
      - enabled: true
        match:
          prefect.resource.id: some.external.resource.*
        expect:
          - external.resource.pinged
        parameters:
          id: "{{ event.resource.get('prefect.resource.id') }}"
          first_name: "{{ event.resource.get('first_name') }}"
          last_name: "{{ event.resource.get('last_name') }}"

  - name: hello-docker
    entrypoint: src/demo_project/hello_docker.py:hello_docker
    work_pool:
      name: docker-work
      job_variables:
        image: prefecthq/prefect:3.0.0rc2-python3.12

  ## comment out all but these 2 to clearly demonstrate caching
  - name: set-working-directory-cached-build
    entrypoint: src/demo_project/no_deps.py:independent_flow
    work_pool:
      name: docker-work
      job_variables:
        image: zzstoatzz/prefect-monorepo:foo
    schedule: null
    build: *cached_docker_build
    pull:
      - prefect.deployments.steps.set_working_directory:
          directory: /opt/prefect/

  - name: set-working-directory-cached-build-2
    entrypoint: src/demo_project/no_deps.py:independent_flow
    work_pool:
      name: docker-work
      job_variables:
        image: zzstoatzz/prefect-monorepo:foo
    schedule: null
    build: *cached_docker_build
    pull:
      - prefect.deployments.steps.set_working_directory:
          directory: /opt/prefect/

  - name: test
    entrypoint: src/demo_project/healthcheck.py:healthcheck
    build: null
    work_pool:
      name: docker-work
      job_variables:
        image: some-image:local
    schedules:
      - cron: "*/15 0 * * *"

  - name: parameter-repro
    version: null
    tags: []
    description: null
    entrypoint: src/demo_project/param_sig.py:main
    parameters:
      hello_msg: "Hello, world!"
    work_pool:
      name: local
      work_queue_name: null
      job_variables: {}
    schedules: []

  - name: uses-secret
    entrypoint: src/demo_project/uses_secret.py:my_flow
    work_pool:
      name: docker-work
      job_variables:
        env:
          MY_SECRET: "{{ prefect.blocks.secret.my-secret }}"

  - name: test-k8s-env
    entrypoint: src/demo_project/healthcheck.py:healthcheck
    work_pool:
      name: kubernetes-prd-internal-tools
      job_variables:
        env:
          - name: MYENV
            value: "var"
          - name: MYENVFROM
            valueFrom:
              secretKeyRef:
                name: "something"
                key: "SECRET"
